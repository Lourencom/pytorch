name: nightly

on:
  pull_request:
    paths:
      - .github/workflows/nightly.yml

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

concurrency:
  group: ${{ github.workflow }}--${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  # docs-build:
  #   name: docs build
  #   uses: ./.github/workflows/_linux-build.yml
  #   with:
  #     runner: arc-lf-linux.2xlarge.arc.canary
  #     build-environment: linux-jammy-py3.8-gcc11
  #     docker-image-name: pytorch-linux-jammy-py3.8-gcc11

  build:
    if: github.repository_owner == 'pytorch'
    runs-on:
      group: arc-lf-linux.2xlarge.arc.canary
    timeout-minutes: 240
    steps:
      - name: Print env
        run: env
      # - name: configure aws credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     role-to-assume: arn:aws:iam::391835788720:role/gha-pytorch-ci-artifacts-role
      #     role-session-name: gha-arc-runner
      #     aws-region: us-east-1

      # - run: echo "Hello world" > file.txt

      # - name: Store PyTorch Build Artifacts on S3
      #   uses: seemethere/upload-artifact-s3@v5
      #   with:
      #     name: test-file
      #     retention-days: 14
      #     if-no-files-found: error
      #     path: file.txt
      #     s3-bucket: pytorch-ci-artifacts

#  docs-push: test
#    name: docs push
#    uses: ./.github/workflows/_docs.yml
#    needs: docs-build
#    with:
#      build-environment: linux-jammy-py3.8-gcc11
#      docker-image: ${{ needs.docs-build.outputs.docker-image }}
#      push: ${{ github.event_name == 'schedule' || startsWith(github.event.ref, 'refs/tags/v') }}
#      run-doxygen: true
#    secrets:
#      GH_PYTORCHBOT_TOKEN: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
#
#  update-vision-commit-hash:
#    runs-on: ubuntu-latest
#    environment: update-commit-hash
#    steps:
#      - name: update-vision-commit-hash
#        uses: pytorch/test-infra/.github/actions/update-commit-hash@main
#        if: ${{ github.event_name == 'schedule' }}
#        with:
#          repo-name: vision
#          branch: main
#          pin-folder: .github/ci_commit_pins
#          test-infra-ref: main
#          updatebot-token: ${{ secrets.UPDATEBOT_TOKEN }}
#          pytorchbot-token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
#
#  update-audio-commit-hash:
#    runs-on: ubuntu-latest
#    environment: update-commit-hash
#    steps:
#      - name: update-audio-commit-hash
#        uses: pytorch/test-infra/.github/actions/update-commit-hash@main
#        if: ${{ github.event_name == 'schedule' }}
#        with:
#          repo-name: audio
#          branch: main
#          pin-folder: .github/ci_commit_pins
#          test-infra-ref: main
#          updatebot-token: ${{ secrets.UPDATEBOT_TOKEN }}
#          pytorchbot-token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
#
#  update-executorch-commit-hash:
#    runs-on: ubuntu-latest
#    environment: update-commit-hash
#    steps:
#      - name: update-executorch-commit-hash
#        uses: pytorch/test-infra/.github/actions/update-commit-hash@main
#        if: ${{ github.event_name == 'schedule' }}
#        with:
#          repo-name: executorch
#          branch: main
#          pin-folder: .ci/docker/ci_commit_pins
#          test-infra-ref: main
#          updatebot-token: ${{ secrets.UPDATEBOT_TOKEN }}
#          pytorchbot-token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}
